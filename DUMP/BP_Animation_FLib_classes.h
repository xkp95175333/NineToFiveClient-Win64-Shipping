// BlueprintGeneratedClass BP_Animation_FLib.BP_Animation_FLib_C
// Size: 0x28 (Inherited: 0x28)
struct UBP_Animation_FLib_C : UBlueprintFunctionLibrary {

	void AF_FinterpConst(float InterpSpeed, float Float, float Target, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_FinterpConst // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF Float Bouncer Linear(float Speed, struct UObject* __WorldContext, float ZeroOne); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF Float Bouncer Linear // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x13c4ca0
	void AF_Finterp(float InterpSpeed, float Float, float Target, bool DeBugs, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_Finterp // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_Vinterp(float InterpSpeed, struct FVector Vector, struct FVector Target, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_Vinterp // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_Rinterp(float InterpSpeed, struct FRotator Rotator, struct FRotator Target, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_Rinterp // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_GetVectorCurveValues(struct UCurveVector* CurveVector, float InputRunner, float Target, float InterpTime, struct FVector Multiplier_LFU, struct UObject* __WorldContext, struct FVector CurveValue); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_GetVectorCurveValues // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_GetFloatCurveValues(struct UCurveFloat* CurveFloat, float InputRunner, float Target, float InterpTime, struct UObject* __WorldContext, float CurveValue); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_GetFloatCurveValues // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_NoiseFloat(struct AActor* Target, float RangeOutMin, float RangeOutMax, float Frequency, struct UObject* __WorldContext, float Noise); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_NoiseFloat // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x13c4ca0
	void AF_EaseVector(float Alpha, struct FVector InVec, float BackAmountMultiplier, struct UObject* __WorldContext, struct FVector OutVec); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseVector // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_Ease_BounceInOut(float Alpha, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_Ease_BounceInOut // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseBounceIn(float Alpha, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseBounceIn // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseElasticInOut(float Alpha, float Frequency, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseElasticInOut // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseElasticIn(float Alpha, float Frequency, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseElasticIn // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseBackInOut(float Alpha, float BackOutMultiplier, float BackInMultiplier, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseBackInOut // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseBackIn(float Alpha, float BackAmountMultiplier, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseBackIn // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseBackOut(float Alpha, float BackAmountMultiplier, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseBackOut // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseElasticOut(float Alpha, float Frequency, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseElasticOut // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	float AF_EaseBounceOut(float Alpha, struct UObject* __WorldContext); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_EaseBounceOut // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_LerpByTime(float Current, float Target, float Time, struct UObject* __WorldContext, float Out); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_LerpByTime // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_RotateVectorAroundPivot(struct FVector Vector, struct FVector Pivot, struct FRotator Rotation, struct UObject* __WorldContext, struct FVector OutVector); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_RotateVectorAroundPivot // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF Sin Lerper Dev(bool Print, float Freq, float Forza, bool Remap, float OutRangeA, float OutRangeB, bool UseSIN, float LinearRangeMin, float LinearRangeMax, struct UObject* __WorldContext, float Out); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF Sin Lerper Dev // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
	void AF_IsLocallyControlled(struct UObject* __WorldContext, bool Result); // Function BP_Animation_FLib.BP_Animation_FLib_C.AF_IsLocallyControlled // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13c4ca0
};

